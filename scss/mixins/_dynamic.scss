@function interpolate( $min, $max, $progress ) {
	@return $min + ( $max - $min ) * $progress;
}

@function interpolate-list( $min-max, $progress ) {
	$list: ();
	@each $min, $max in $min-max {
		$val: interpolate( $min, $max, $progress );
		$list: append( $list, $val );
	}
	@return $list;
}

$steps: ( $small 0 ) ( $narrow 0.33 ) ( $medium 0.66 ) ( $large 1 );

@mixin dynamic-prop( $min, $max, $property ) {
	@each $bp, $progress in $steps {
		@include bp( $bp ) {
			#{$property}: interpolate( $min, $max, $progress );
		}
	}
}

@mixin dynamic-prop-list( $min-max, $property ) {
	@each $bp, $progress in $steps {
		@include bp( $bp ) {
			#{$property}: interpolate-list( $min-max, $progress );
		}
	}
}

@mixin dynamic-height( $min, $max  ) {
	@include dynamic-prop( $min, $max, 'height' );
}

@mixin dynamic-text( $min, $max ) {
	@include dynamic-prop( $min, $max, 'font-size' );
}

@mixin dynamic-padding( $top: 0 1rem, $right: null, $bottom: null, $left: null ) {
	@if $right == null {
		$right: $top;
	}
	@if $bottom == null {
		$bottom: $top;
	}
	@if $left == null {
		$left: $right;
	}

	// $top-min: nth( $top, 1 );
	// $top-max: nth( $top, 2 );
	// $right-min: nth( $right, 1 );
	// $right-max: nth( $right, 2 );
	// $bottom-min: nth( $bottom, 1 );
	// $bottom-max: nth( $bottom, 2 );
	// $left-min: nth( $left, 1 );
	// $left-max: nth( $left, 2 );
	$sides: $top, $right, $bottom, $left;

	@include dynamic-prop-list( $sides, 'padding' );

	// @each $bp, $progress in $steps {
	// 	@include bp( $bp ) {
	// 		$t: interpolate( $top-min, $top-max, $progress );
	// 		$r: interpolate( $right-min, $right-max, $progress );
	// 		$b: interpolate( $bottom-min, $bottom-max, $progress );
	// 		$l: interpolate( $left-min, $left-max, $progress );
	// 		padding: $t $r $b $l;
	// 	}
	// }
}
